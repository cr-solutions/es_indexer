{
"rds":{
   "endpoint":"mydatabase.c55rlhhdrfwl.eu-west-1.rds.amazonaws.com:3306",
   "user":"myuser",
   "password":"mypw",
   "retry": 1,
   "retry_wait_sec": 3
   },
 "es":{
   "endpoint":"https://myes-2ydp5bqfjfm2snkmyzkcszt4mi.eu-west-1.es.amazonaws.com:443",
   "_comment-user_password":"optional, only if HTTP basic authentication is required",
   "user": "myuser",
   "password":"mypw",
   "timeout":5,
   "_comment-retry": "retry last indexing bulk on http read error",
   "retry": 1,
   "retry_wait_sec": 2
 },  
 "sql":{
   "_comment-last-modified-timestamp-field":"last-modified-timestamp-field as schema.table.fieldname, this field is used by WHERE to identify rows to be indexed (can be set auto. via CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP as sample), after successfully index-update this field will be set to 1970-01-01 00:00:00 via last-modified-timestamp-upd-key, the WHERE on last-modified-timestamp-upd-key is not used if the class is called with offset for full indexing",
   "last-modified-timestamp-field":"mydb.mytable.date_changed",   
   "last-modified-timestamp-upd-key":"id=$id_user",
   "query-pre": "SET SESSION group_concat_max_len = 2048; SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;",
   "group-by":"",
   "_comment-sort":"to sort by last_mod_field with sort order or leave empty for natural sort"
   "sort": "ASC",
   "additional-where": "",
   "_comment-additional-primary-key-for-full-indexing":"in case of full indexing, this increase the performance because it will be used as natural offset as sample by WHERE mydb.mytable,id >= [id] AND mydb.mytable,id <= [id]    (id must be numceric)",
   "additional-primary-key-for-full-indexing": "mydb.mytable.id",
   "data":[
      {
         "schema":"mydb",
         "table":"mytable",
         "fields":["id AS id_user", "firstname", "surname"]
      },
      {
         "join":"mytable.id = mytableEx.id_user",
         "schema":"mydb",
         "table":"mytableEx",
         "_comment_cast":"use as sample CAST to map the correct field type in Elasticsearch if you use MySQL ENUM",
         "fields":["age", "CAST(CAST(mytableEx.priority AS CHAR) AS SIGNED) AS priority"]
      },
      {
         "_comment-extended-join":"you can use extended joins for reference tables too",
         "join":"LEFT JOIN mydb.addr ON addr.id=ref_addr.id_addr ON ref_addr.id_user = mydb.mytable.id",
         "schema":"pm",
         "table":"ref_addr",
         "fields":["IF(GROUP_CONCAT(DISTINCT addr.city) IS NULL, '', REPLACE(CONCAT(',', GROUP_CONCAT(DISTINCT addr.city)),',',' city_'))  AS cities"]
      }
   ]         
 },
 "settings":{
    "_comment":"requests a create index, if the index still not exists",
    "replicas":1,
    "shards":2
 },
 "mapping":
 {
   "_comment":"_id is the internal Elasticsearch id field, _commant and _id will be removed from JSON transferred to Elasticsearch",
   "_id":"$id_user",
   "_type":"_doc",
   "id_user":"$id_user",
   "firstname":"$firstname",   
   "surname":"$surname",
   "age":"$age",
   "type":"$type",
   "json_payload":"$json_payload"
 }
}